# -*- mode: ruby -*-
# vi: set ft=ruby :

BOX_NAME = ENV["BOX_NAME"] || "bento/ubuntu-14.04"
BOX_MEMORY = ENV["BOX_MEMORY"] || "2048"
RHUB_DOMAIN = ENV["RHUB_DOMAIN"] || "rhub.me"
RHUB_IP = ENV["RHUB_IP"] || "10.0.0.2"
LINUX_IP = ENV["LINUX_IP"] || "10.0.0.3"
FORWARDED_PORT = (ENV["FORWARDED_PORT"] || '8080').to_i
PUBLIC_KEY_PATH = "#{Dir.home}/.ssh/id_rsa.pub"
JENKINS_PASSWORD = ENV["JENKINS_PASSWORD"] || "2eea3b927d4ee23e"

Vagrant::configure("2") do |config|
  config.ssh.forward_agent = true

  config.vm.box = BOX_NAME

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # Ubuntu's Raring 64-bit cloud image is set to a 32-bit Ubuntu OS type by
    # default in Virtualbox and thus will not boot. Manually override that.
    vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"]
    vb.customize ["modifyvm", :id, "--memory", BOX_MEMORY]
  end

  config.vm.define "rhub", primary: true do |vm|
    vm.vm.network :forwarded_port, guest: 80, host: FORWARDED_PORT
    vm.vm.hostname = "#{RHUB_DOMAIN}"
    vm.vm.network :private_network, ip: RHUB_IP
    vm.vm.provision :shell, :path => "dokku.sh"
  end

  config.vm.define "linux" do |vm|
    env = {
      RHUB_IP: "#{RHUB_IP}",
      JENKINS_PASSWORD: "#{JENKINS_PASSWORD}"
    }
    vm.vm.hostname = "linux.#{RHUB_DOMAIN}"
    vm.vm.network :private_network, ip: LINUX_IP
    vm.vm.provision "file", source: "swarm.conf", destination: "swarm.conf"
    vm.vm.provision "shell", path: "linux.sh", env: env
  end

  if Pathname.new(PUBLIC_KEY_PATH).exist?
    config.vm.provision :file, source: PUBLIC_KEY_PATH, destination: '/tmp/id_rsa.pub'
    config.vm.provision :shell, :inline => "rm -f /root/.ssh/authorized_keys && mkdir -p /root/.ssh && sudo cp /tmp/id_rsa.pub /root/.ssh/authorized_keys"
  end
end
